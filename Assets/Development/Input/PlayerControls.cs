//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Development/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""bee9e9c9-5a70-4a9c-9377-ed4c2e77c156"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""63799017-8bc1-49db-864b-c8f8da749125"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""BuyWallTile"",
                    ""type"": ""Button"",
                    ""id"": ""7c12dbbb-da81-46aa-8dbc-ac4c127e093f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BuyTntTile"",
                    ""type"": ""Button"",
                    ""id"": ""095e1109-3a6c-4706-810c-975e8b87659e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveTile"",
                    ""type"": ""Button"",
                    ""id"": ""33700752-6adc-4f3b-9058-4b046647b22e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DetonateTntTile"",
                    ""type"": ""Button"",
                    ""id"": ""38a1c948-8761-4d03-9b5a-63d9946f2f36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SetReady"",
                    ""type"": ""Button"",
                    ""id"": ""23d04334-a82c-4447-84a0-f9e1590127b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SetReadyEndGame"",
                    ""type"": ""Button"",
                    ""id"": ""7746c9bd-6818-4af1-8f95-e9b62909e8e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReviveFriend"",
                    ""type"": ""Button"",
                    ""id"": ""62df0aa0-1fb4-46db-81f7-6f6747462c69"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=1)"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""960b4d15-18f0-419d-9bbf-aba28862f2ca"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c5d9f55b-15d1-4e0f-adfe-bef0003f996b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7b4cfa0b-521e-45f7-b313-44283546a7f9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1cf45bd5-88c2-49c7-8e41-d997a3509142"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3246cf35-ee43-4189-a739-f9294b8754b6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4964e5d5-7454-4c91-8937-ffafed416287"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c7697fd-b85d-4e7f-966d-a845703e2abc"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29f30f0f-d52a-408f-82c3-60806b3ee1dc"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BuyWallTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1ed0bf1-08a4-4299-ab71-ef32a17fd0be"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BuyWallTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea1b500b-face-4bff-a3cc-dcf1d1749d2e"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a2ff5be-38ad-42e3-aec0-85b635961f3f"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3501cf00-8ec1-4d9d-9b64-923560e08175"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BuyTntTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""198b033d-e785-48e1-94b0-946ec9e2a7d9"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BuyTntTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ef4888c-7524-42c3-9c69-1b525231e00c"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DetonateTntTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""663a1c7f-4601-474d-abad-965a6e2a8a12"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DetonateTntTile"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d3f88ac-f9bd-4a31-adde-e5cab96e4ffb"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SetReady"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""993328a4-2294-4f20-9d8c-20becfb8f24f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SetReady"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e241c0a3-e48c-40ea-81ca-761895a86fb2"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SetReadyEndGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0751c5b1-f55b-4ee3-bfc7-6bcadc8345ac"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SetReadyEndGame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3ca980b-d777-4c63-9c51-b534a014e48f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReviveFriend"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc5a48f3-3c67-404c-a0b0-d44892c92169"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReviveFriend"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_BuyWallTile = m_Player.FindAction("BuyWallTile", throwIfNotFound: true);
        m_Player_BuyTntTile = m_Player.FindAction("BuyTntTile", throwIfNotFound: true);
        m_Player_MoveTile = m_Player.FindAction("MoveTile", throwIfNotFound: true);
        m_Player_DetonateTntTile = m_Player.FindAction("DetonateTntTile", throwIfNotFound: true);
        m_Player_SetReady = m_Player.FindAction("SetReady", throwIfNotFound: true);
        m_Player_SetReadyEndGame = m_Player.FindAction("SetReadyEndGame", throwIfNotFound: true);
        m_Player_ReviveFriend = m_Player.FindAction("ReviveFriend", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_BuyWallTile;
    private readonly InputAction m_Player_BuyTntTile;
    private readonly InputAction m_Player_MoveTile;
    private readonly InputAction m_Player_DetonateTntTile;
    private readonly InputAction m_Player_SetReady;
    private readonly InputAction m_Player_SetReadyEndGame;
    private readonly InputAction m_Player_ReviveFriend;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @BuyWallTile => m_Wrapper.m_Player_BuyWallTile;
        public InputAction @BuyTntTile => m_Wrapper.m_Player_BuyTntTile;
        public InputAction @MoveTile => m_Wrapper.m_Player_MoveTile;
        public InputAction @DetonateTntTile => m_Wrapper.m_Player_DetonateTntTile;
        public InputAction @SetReady => m_Wrapper.m_Player_SetReady;
        public InputAction @SetReadyEndGame => m_Wrapper.m_Player_SetReadyEndGame;
        public InputAction @ReviveFriend => m_Wrapper.m_Player_ReviveFriend;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @BuyWallTile.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBuyWallTile;
                @BuyWallTile.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBuyWallTile;
                @BuyWallTile.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBuyWallTile;
                @BuyTntTile.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBuyTntTile;
                @BuyTntTile.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBuyTntTile;
                @BuyTntTile.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBuyTntTile;
                @MoveTile.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveTile;
                @MoveTile.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveTile;
                @MoveTile.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMoveTile;
                @DetonateTntTile.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDetonateTntTile;
                @DetonateTntTile.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDetonateTntTile;
                @DetonateTntTile.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDetonateTntTile;
                @SetReady.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSetReady;
                @SetReady.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSetReady;
                @SetReady.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSetReady;
                @SetReadyEndGame.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSetReadyEndGame;
                @SetReadyEndGame.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSetReadyEndGame;
                @SetReadyEndGame.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSetReadyEndGame;
                @ReviveFriend.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReviveFriend;
                @ReviveFriend.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReviveFriend;
                @ReviveFriend.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReviveFriend;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @BuyWallTile.started += instance.OnBuyWallTile;
                @BuyWallTile.performed += instance.OnBuyWallTile;
                @BuyWallTile.canceled += instance.OnBuyWallTile;
                @BuyTntTile.started += instance.OnBuyTntTile;
                @BuyTntTile.performed += instance.OnBuyTntTile;
                @BuyTntTile.canceled += instance.OnBuyTntTile;
                @MoveTile.started += instance.OnMoveTile;
                @MoveTile.performed += instance.OnMoveTile;
                @MoveTile.canceled += instance.OnMoveTile;
                @DetonateTntTile.started += instance.OnDetonateTntTile;
                @DetonateTntTile.performed += instance.OnDetonateTntTile;
                @DetonateTntTile.canceled += instance.OnDetonateTntTile;
                @SetReady.started += instance.OnSetReady;
                @SetReady.performed += instance.OnSetReady;
                @SetReady.canceled += instance.OnSetReady;
                @SetReadyEndGame.started += instance.OnSetReadyEndGame;
                @SetReadyEndGame.performed += instance.OnSetReadyEndGame;
                @SetReadyEndGame.canceled += instance.OnSetReadyEndGame;
                @ReviveFriend.started += instance.OnReviveFriend;
                @ReviveFriend.performed += instance.OnReviveFriend;
                @ReviveFriend.canceled += instance.OnReviveFriend;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnBuyWallTile(InputAction.CallbackContext context);
        void OnBuyTntTile(InputAction.CallbackContext context);
        void OnMoveTile(InputAction.CallbackContext context);
        void OnDetonateTntTile(InputAction.CallbackContext context);
        void OnSetReady(InputAction.CallbackContext context);
        void OnSetReadyEndGame(InputAction.CallbackContext context);
        void OnReviveFriend(InputAction.CallbackContext context);
    }
}
